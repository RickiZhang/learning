以下根据读的优先级分1、2、3排序，前面的推荐优先读完，最起码1要都看完吧，1--3如果全看完后就看自己兴趣自由发挥了

1、
effective C++（必读）
more effective C++（必读）
effective STL（必读）
effective modern C++（必读）
STL源码剖析（必读）
深度探索C++对象模型（必读）
exceptional c++（必读）
C陷阱与缺陷（必读）
The C++ Programming Language（挑选着读，常备做字典，以前的版本翻译比较拗口，后面的版本不清楚了）
C++ Primer（挑选着读，常备做字典）
sed & awk（如果感兴趣可读，不然就自己网络上搜搜基本语法，会用即可）
bash编程（随便找一本可信度高的看看）
数据结构与算法分析（C++版）（没看过，听过，我看的是下面的那个）
算法i-iv（C++实现）（robert著）（不错的算法书，不会像算法导论那么枯燥，我看的版本有好几本的）
程序员的自我修养--链接、装载与库（国内人自己写的比较实用的技术书之一）
unix环境高级编程	
unix网络编程
设计模式（四人帮那本，经典书，但是中文翻译比较差，没有太多实际经验读起来可能过头就忘了）
深入浅出设计模式（head first系列，浅显易懂，傻瓜式讲解，还有一本head first java，对java有兴趣也可以看一下）


2、
C专家编程
more exceptional c++
exceptional c++ style（感兴趣可细读，比较学院派）
C++深思录（C语言专家到C++专家的思考过程）
c++模板元编程
C++ Templates（有新版本了，但是好像只有英文版）
unix编程艺术


3、
modern c++ design（新标准之前模板元编程设计的基本技巧都在里面了，不过实际会用到的估计不多）
设计模式（最经典著名的那本，老版本翻译得和渣一样，不知道新版本怎么样了）
linkers and loaders（没有官方翻译，只有民间翻译，历史老书，没有新版，技术落后，有兴趣可读）
perl语言入门（如果感兴趣可读，现在用perl的越来越少了）
Go语言实战（go入门不错的书）
Go程序设计语言（号称go圣经，我没看过）


4、这个纯属个人随意推荐，比较杂，有兴趣可以看
计算机程序的构造和解释（SICP）（个人5星推荐第一本，有几年编码经验后看更佳，虽然这是别人家的大学教材）
编程珠玑（1、2）（5星推荐第二本）
黑客与画家（和实际应用没关，可做闲时读）
